problem 1 -> climbing stairs -> 70

if n == 1:
	return 1
elif n == 2:
	return 2
else:
        dp = [1, 2]
        for i in range(2, n):
            dp.append(dp[i - 1] + dp[i - 2])
        return dp[n - 1]


pascals triangle | -> 118

if numRows == 1:
            return [[1]]
        elif numRows == 2:
            return [[1], [1, 1]]
        else:
            dp = [[1], [1, 1]]
            for i in range(3, numRows + 1):
                l = [1] * i
                for j in range(1, i - 1):
                    a = dp[i - 2]
                    l[j] = a[j - 1] + a[j]
                dp.append(l)

            return dp

pascals triangle || - > 119

if rowIndex == 0:
            return [1]
        elif rowIndex == 1:
            return [1, 1]
        else:
            dp = [[1], [1, 1]]
            for i in range(3, rowIndex + 2):
                l = [1] * i
                for j in range(1, i - 1):
                    a = dp[i - 2]
                    l[j] = a[j - 1] + a[j]
                dp.append(l)

            return dp[rowIndex]



